useCache: true

server:
  port: 8000
debug: false

spring:
  output:
    ansi:
      enabled: always
  application:
    name: Jay's Java Playground
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true

#  datasource:
    #url: jdbc:mysql://10.163.113.121/playground
#    url: jdbc:mysql://127.0.0.1/playground
#    url: jdbc:h2:~/h2/playground
#    url: jdbc:postgresql://host.docker.internal/xujiajing
    #url:  jdbc:hsqldb:${user.home}/hsqldb/playground
#    hikari:
#      username: demo
#      password: demo

  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        #generate_statistics: ${useCache}
        cache:
          use_second_level_cache: ${useCache}
          use_query_cache: ${useCache}
          region:
#            factory_class: org.redisson.hibernate.RedissonRegionFactory
              factory_class: jcache
#          redisson:
#            fallback: true
#            config: redisson.yaml
#      jakarta:
#        persistence:
#          sharedCache:
#            mode: ENABLE_SELECTIVE

  shardingsphere:
    props:
      sql-show: false
    mode:
      type: Standalone
            
    datasource:
      names: ds
      ds:
          type: com.zaxxer.hikari.HikariDataSource
          jdbcUrl: jdbc:mysql://127.0.0.1/playground
          username: demo
          password: demo
    
    rules:
      sharding:
        tables:
          users:
            actual-data-nodes: ds.users_$->{0..3}
            table-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: user-id
          
#        auto-tables:
#          users:
#            actual-data-sources: ds
#            sharding-strategy:
#              standard:
#                sharding-column: id
#                sharding-algorithm-name: user-inline
        
        sharding-algorithms:
          user-id:
            type: INLINE
            props:
              algorithm-expression: users_$->{id % 4}

  jackson:
    serialization:
      fail-on-empty-beans: false
#  profiles:
#    active: dev

  boot:
    admin:
      client:
        url:
        - http://127.0.0.1:9000

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org:
#      hibernate.cache: debug
#      springframework:
#        web.reactive: debug

springdoc:
  swagger-ui:
    display-request-duration: true
    enabled: true
#    path: /swagger.html
    csrf:
      enabled: true
#  show-actuator: true
  

#---
#spring:
#  config:
#    activate:
#      on-profile: [prod, dev]
#
#  datasource:
#    #url: jdbc:mysql://10.163.113.121/playground
#    #    url: jdbc:mysql://127.0.0.1/playground
#    url: jdbc:postgresql://host.docker.internal/xujiajing
#
#---
#spring:
#  config:
#    activate:
#      on-profile: test
#
#  jpa:
#    properties:
#      hibernate:
#        generate_statistics: false
#        cache:
#          use_second_level_cache: false
#          use_query_cache: false
#
#  boot:
#    admin:
#      client:
#        enabled: false
