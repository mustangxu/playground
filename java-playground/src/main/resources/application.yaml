useCache: true
web3:
  eth:
    url: https://cloudflare-eth.com

debug: false
server:
  http2:
    enabled: true
  port: 8000
#  ssl:
#    key-store: classpath:jayxu.p12
#    key-store-password: changeit
#    client-auth: want
#    trust-store: classpath:jayxu-ca.p12
#    trust-store-password: changeit,

spring:
  output:
    ansi:
      enabled: always
  application:
    name: Jay's Java Playground
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
    web-application-type: reactive
    
  datasource:
#    url: jdbc:mysql://127.0.0.1/playground
#    url: jdbc:h2:~/h2/playground
#    url: jdbc:postgresql://host.docker.internal/xujiajing
#    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:sharding.yaml

  jpa:
    #generate-ddl: true
    show-sql: true
#    hibernate:
#      ddl-auto: update
    open-in-view: false
    properties:
#      hibernate:
        #generate_statistics: ${useCache}
#        cache:
#          use_second_level_cache: ${useCache}
#          use_query_cache: ${useCache}
#          region:
#            factory_class: org.redisson.hibernate.RedissonRegionFactory
#              factory_class: jcache
#          redisson:
#            fallback: true
#            config: redisson.yaml
      eclipselink:
        cache.query-results: ${useCache}
        ddl-generation: create-or-extend-tables
#        jdbc.batch-writing.size: 100
        logging.level: INFO
      jakarta:
        persistence:
          sharedCache:
            mode: ENABLE_SELECTIVE
          
  jackson:
    serialization:
      fail-on-empty-beans: false

  boot:
    admin:
      client:
        url:
        - http://127.0.0.1:9000
        
  cloud:
    openfeign:
      okhttp:
        enabled: true
      compression:
        request:
          enabled: true
        response:
          enabled: true
      circuitbreaker:
        enabled: true
      micrometer:
        enabled: true
  
  ai:
    openai:
      api-key: ENC(ij9JyrYMHXBYhAQXhnOoDD4cT3rScUrhlwzNGEyeJtFtSMpv1lsov3qE3tX329cgentwKwUI+ao513U/7wm8qfxFVCSJ7jdTRPbqh+3/WTmGXa49DEa7l7BMnscvVBSK)
  
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com.jayxu:
      playground.mailgun.MailgunService: debug
      openai4j: debug
#    org:
#      hibernate.cache: debug
#      springframework:
#        web.reactive: debug

springdoc:
  swagger-ui:
    display-request-duration: true
    enabled: true
#    path: /swagger.html
    csrf:
      enabled: true
#  show-actuator: true

eureka:
  client:
    enabled: false
    healthcheck:
      enabled: true
#    service-url: 
#      defaultZone: http://127.0.0.1:${server.port}/eureka/

mailgun:
  domain: ENC(FUilrw7uoSPBUc7Weyzm7ifzei0dfZ4rwgPyXPrvR5gAcYxhXVr7Ixzf/zhMVBJx)
  base-url: https://api.mailgun.net/v3/${mailgun.domain}
  api-key: ENC(Q40HqUGYofLhrHaQjdF037T3XksYHkDumr+0Ng4h2kvtPcuHHbTKeGp6yFUhsJpf6m3Crnc1DTCwm5vmLuoG5r7wbHYQESMz6vYcsjaZI5Jbjfq3/oh8RKuhRT8Erma8)
  
wolfram:
  api-key: ENC(vVHSJ1WNlRIK+A32fm3NgcQFPGqae7W2taUuFjsmiMcjHKRGTHwzDMaYxVVeZWhoXkP22UY5UcTIYMqw992Hrw==)

openai:
  api-key: ENC(ij9JyrYMHXBYhAQXhnOoDD4cT3rScUrhlwzNGEyeJtFtSMpv1lsov3qE3tX329cgentwKwUI+ao513U/7wm8qfxFVCSJ7jdTRPbqh+3/WTmGXa49DEa7l7BMnscvVBSK)



---
useCache: false
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:shardingsphere:classpath:sharding-test.yaml
  
  boot:
    admin:
      client:
        enabled: false
  quartz:
    auto-startup: false

springdoc:
  swagger-ui:
    enabled: false

management:
  endpoint:
    health:
      enabled: false
  endpoints:
    enabled-by-default: false
    


---
useCache: false
spring:
  config:
    activate:
      on-profile: embedded
  datasource:
    #url: jdbc:shardingsphere:classpath:sharding-test.yaml
#    url: jdbc:h2:~/h2/playground_test
    url: jdbc:sqlite:${user.home}/sqlite/playground_test.db
    username: demo
    password: demo

  boot:
    admin:
      client:
        enabled: false
  quartz:
    auto-startup: false

management:
  endpoint:
    health:
      enabled: false
  endpoints:
    enabled-by-default: false