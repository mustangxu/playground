useCache: true

server:
  port: 8000
debug: false

spring:
  output:
    ansi:
      enabled: always
  application:
    name: Jay's Java Playground
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true

#  datasource:
    #url: jdbc:mysql://10.163.113.121/playground
#    url: jdbc:mysql://127.0.0.1/playground
#    url: jdbc:h2:~/h2/playground
#    url: jdbc:postgresql://host.docker.internal/xujiajing
    #url:  jdbc:hsqldb:${user.home}/hsqldb/playground
#    hikari:
#      username: demo
#      password: demo

  jpa:
    #generate-ddl: true
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        #generate_statistics: ${useCache}
        cache:
          use_second_level_cache: ${useCache}
          use_query_cache: ${useCache}
          region:
#            factory_class: org.redisson.hibernate.RedissonRegionFactory
              factory_class: jcache
#          redisson:
#            fallback: true
#            config: redisson.yaml
      eclipselink:
        cache.query-results: ${useCache}
        ddl-generation: create-or-extend-tables
#      jakarta:
#        persistence:
#          sharedCache:
#            mode: ENABLE_SELECTIVE

  shardingsphere:
    props:
      sql-show: true
    mode:
      type: Standalone
            
    datasource:
      names: ds_1, ds_2
      ds_1:
        type: com.zaxxer.hikari.HikariDataSource
        jdbcUrl: jdbc:mysql://127.0.0.1/playground?connectionTimeZone=GMT%2B8
#        jdbcUrl: jdbc:h2:~/h2/playground_1
        username: demo
        password: demo
      ds_2:
        type: com.zaxxer.hikari.HikariDataSource
        jdbcUrl: jdbc:mysql://127.0.0.1/playground_s?connectionTimeZone=GMT%2B8
#        jdbcUrl: jdbc:h2:~/h2/playground_2
        username: demo
        password: demo
    
    rules:
      sharding:
#        tables:
#          orders:
#            actualDataNodes: ds.orders_$->{202302..202303}
#            shardingStrategy:
#              standard:
#                shardingColumn: createtime
#                shardingAlgorithmName: daily
         
        auto-tables:
          users:
            actualDataSources: ds_1, ds_2
            shardingStrategy:
              standard:
                shardingColumn: id
                shardingAlgorithmName: mod
          user_infos:
            actualDataSources: ds_1, ds_2
            shardingStrategy:
              standard:
                shardingColumn: id
                shardingAlgorithmName: mod
          orders:
            actualDataSources: ds_1
            shardingStrategy:
              standard:
                shardingColumn: createtime
                shardingAlgorithmName: daily

        sharding-algorithms:
          user-id:
            type: INLINE
            props:
              algorithm-expression: users_$->{id % 4}
          mod:
            type: MOD
            props:
              sharding-count: 4
          daily:
            type: AUTO_INTERVAL
            props:
#              datetime-pattern: 'yyyy-MM-dd HH:mm:ss'
              datetime-lower: '2023-02-20 00:00:00'
              datetime-upper: '2023-02-28 00:00:00'
#              sharding-suffix-pattern: 'yyyyMMdd'
#              datetime-interval-amount: 1
#              datetime-interval-unit: 'DAYS'
              sharding-seconds: 86400

        binding-tables: users, orders, user_infos
        
  jackson:
    serialization:
      fail-on-empty-beans: false
#  profiles:
#    active: dev

  boot:
    admin:
      client:
        url:
        - http://127.0.0.1:9000

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    org:
#      hibernate.cache: debug
#      springframework:
#        web.reactive: debug

springdoc:
  swagger-ui:
    display-request-duration: true
    enabled: true
#    path: /swagger.html
    csrf:
      enabled: true
#  show-actuator: true
  

#---
#spring:
#  config:
#    activate:
#      on-profile: [prod, dev]
#
#  datasource:
#    #url: jdbc:mysql://10.163.113.121/playground
#    #    url: jdbc:mysql://127.0.0.1/playground
#    url: jdbc:postgresql://host.docker.internal/xujiajing
#
---
useCache: false
spring:
  config:
    activate:
      on-profile: test
  
  shardingsphere:
    props:
      sql-show: true
    mode:
      type: Standalone
            
    datasource:
      names: ds_1, ds_2
      ds_1:
        type: com.zaxxer.hikari.HikariDataSource
        jdbcUrl: jdbc:h2:mem:db1
      ds_2:
        type: com.zaxxer.hikari.HikariDataSource
        jdbcUrl: jdbc:h2:mem:db2

  boot:
    admin:
      client:
        enabled: false
        
management:
  endpoint:
    health:
      enabled: false
  endpoints:
    enabled-by-default: false
